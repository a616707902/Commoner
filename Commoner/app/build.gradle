apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.chenpan.commoner"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword System.console() == null ? null : new String(System.console().readPassword("\nKeystore password: "))
            keyAlias "陈攀"
            keyPassword System.console() == null ? null : new String(System.console().readPassword("\nKey password: "))
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile('com.android.support:appcompat-v7:23.1.0') {
        force = true;
    }
    compile('com.android.support:design:23.1.0') {
        force = true;
    }
    compile('com.android.support:support-v4:23.1.0') {
        force = true;
    }
    compile 'com.jakewharton:butterknife:7.0.0'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.nineoldandroids:library:2.4.0'
    compile files('libs/jsoup-1.8.3.jar')
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    compile project(':library')
    compile 'com.github.chrisbanes.photoview:library:1.2.2'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.zhy:okhttputils:2.3.8'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile files('libs/AMap_Location_1.3.3.jar')
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
    compile project(':skinlibrary')
}
final def TARGET_SKIN_DIR = '../skin-package/'
final def SAMPLE_NAME = 'Commoner.apk'
assembleRelease.doLast {
    println("=====================assembleRelease.doLast.begin.=========================")

    def dir = new File(TARGET_SKIN_DIR)
    if (!dir.exists()) {
        dir.mkdirs()
    }

    def f = new File(TARGET_SKIN_DIR + SAMPLE_NAME)
    if (f.exists()) {
        f.delete()
    }

    copy {
        from('build/outputs/apk')
        into(TARGET_SKIN_DIR)
        include '*.apk'
        exclude '**/*-unaligned.apk'
        rename ('com.chenpan.commoner-release.apk', SAMPLE_NAME)
    }

    println("=====================assembleRelease.doLast success.=========================")
}

assembleDebug.doLast {
    println("=====================assembleDebug.doLast.begin.=========================")

    def dir = new File(TARGET_SKIN_DIR)
    if (!dir.exists()) {
        dir.mkdirs()
    }

    def f = new File(TARGET_SKIN_DIR + SAMPLE_NAME)
    if (f.exists()) {
        f.delete()
    }

    copy {
        from('build/outputs/apk')
        into(TARGET_SKIN_DIR)
        include '*.apk'
        exclude '**/*-unaligned.apk'
        rename ('com.chenpan.commoner-debug.apk', SAMPLE_NAME)
    }

    println("=====================assembleDebug.doLast success.=========================")
}
